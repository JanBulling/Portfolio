---
import { formatDate } from "@/lib/utils";
import type { CollectionEntry } from "astro:content";

interface Props {
  entry: CollectionEntry<"work">;
}

const { entry } = Astro.props;

const endDate = !entry.data.endDate
  ? "now"
  : typeof entry.data.endDate === "string"
    ? entry.data.endDate
    : formatDate(entry.data.endDate);
---

<div
  class='px-4 pt-2 pb-4 border rounded-lg border-black/15 dark:border-white/20 transition-colors duration-300 ease-in-out'
>
  <p class='text-sm'>
    {formatDate(entry.data.startDate)} - {endDate}
  </p>
  <div class='flex items-start gap-4 mt-2'>
    {
      entry.data.image ? (
        <img
          class='h-10 w-10 rounded-full border border-black/15 dark:border-white/20'
          src={entry.data.image}
        />
      ) : (
        <div class='h-10 w-10 rounded-full border border-black/15 dark:border-white/20' />
      )
    }
    <div class='flex-1'>
      <h3 class='font-semibold text-black dark:text-white'>
        {entry.data.company}
      </h3>
      <p class='text-sm'>{entry.data.role}</p>
      <p class='mt-4 text-sm'>{entry.data.summary}</p>
    </div>
  </div>
  {
    entry.data.subJobs && (
      <ul class='translate-x-5 px-2 py-2 border-l-2 space-y-4 border-black/15 dark:border-white/20 '>
        {entry.data.subJobs.map((job: any) => {
          const jobEndDate = !job.endDate
            ? "now"
            : typeof job.endDate === "string"
              ? job.endDate
              : formatDate(job.endDate);
          return (
            <li>
              <div>
                <h4 class='font-semibold text-sm'>{job.role}</h4>
                <p class='text-sm'>{job.summary}</p>
                <p class='text-sm'>
                  {formatDate(job.startDate)} - {jobEndDate}
                </p>
              </div>
            </li>
          );
        })}
      </ul>
    )
  }
</div>
